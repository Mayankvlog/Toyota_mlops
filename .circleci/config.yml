version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.8

    steps:
      - checkout

      # Install dependencies
      - run:
          name: Install Dependencies
          command: |
            pip install -r requirements.txt

      # Run pytest and store results
      - run:
          name: Run Tests
          command: |
            pytest -v --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results

      # Save plots as artifacts
      - persist_to_workspace:
          root: .
          paths:
            - scatter_plot.html
            - pie_plot.html
            - bar_plot.html
            - line_plot.html

  deploy:
    docker:
      - image: cimg/python:3.8

    steps:
      - checkout

      
      # Deploy to Streamlit sharing
      #- run:
      #    name: Deploy to Streamlit Sharing
      #    command: |
      #      pip install streamlit
      #      streamlit deploy app.py


      # Install GitHub CLI
      - run:
          name: Deploy to GitHub Pages
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt list --upgradable
            sudo apt install gh
            echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token -
            
      # Authenticate with GitHub 
      - run:
          name: Authenticate with GitHub
          command: |
            #echo "${GITHUB_TOKEN}" | gh auth login --with-token -
            #gh auth login --with-token $GITHUB_TOKEN
            #echo "$GITHUB_TOKEN" | gh auth login --with-token -
            #gh auth login --with-token GITHUB_TOKEN
            echo "${{ GITHUB_TOKEN }}" | gh auth login --with-token -
            
      # Deploy to GitHub Pages
      - run:
          name: Deploy to GitHub Pages
          command: |
            # Replace this with your deployment command
            echo "Deploying to GitHub Pages"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
    
